@startuml

rectangle "class diagram" { 
    rectangle Application {
        class Main 
        
        interface WeatherDataAccessInterface {
            + getDaySmallestTempSpread(): String
        }

        class WeatherDataAccess {
            WeatherDataAccess(String filePath)
        }

        interface FootballDataAccessInterface {
            + teamSmallestDifference(): String
        }

        class FootballDataAccess {
            FootballDataAccess(String filePath)
        }

        abstract class DataAccess {
            + DataAccess(String filePath)
            + rowSmallestDifference(String label1, String label2): int 
            # absoluteDifference(String value1, String value2): Integer
            + setReader(String filepath): void
        }
    }

    rectangle FileAbstraction {
        class CsvReader {
            + ReaderInterface(String csvFilePath)
        }

        class JsonReader {
            + ReaderInterface(String jsonFilePath)
            
        }

        interface ReaderInterface {
            + getLabels(): Arraylist<String>
            + getValues(String label): Arraylist<String>
            + getElement(int index, String label): String
            + getRow(int index): Arraylist<String>
        }
    }

    
}

WeatherDataAccessInterface <|-- WeatherDataAccess : implements
FootballDataAccessInterface <|-- FootballDataAccess : implements
DataAccess <|-- WeatherDataAccess : extends 
DataAccess <|-- FootballDataAccess : extends 

DataAccess *-- "1" ReaderInterface : contains
ReaderInterface <|-- CsvReader : implements
ReaderInterface <|-- JsonReader : implements

Main *-- "1" WeatherDataAccessInterface : contains
Main *-- "1" FootballDataAccessInterface : contains

@enduml